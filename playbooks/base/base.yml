- name: nielsbohr/base-notebook
  hosts: all
  vars:
    project_name: nielsbohr/base-notebook:edge
    notebook:
      user: jovyan
      uid: 1000
    ansible_bender:
      base_image: jupyter/base-notebook:lab-3.0.12
      target_image:
        name: "{{ project_name }}"
        user: "{{ notebook.user }}"
        working_dir: "/home/{{ notebook.user }}"
        environment:
          CONDA_DIR: /opt/conda
          JUPYTER_PATH: "$CONDA_DIR/envs/jupyter"
          PATH: "~/local/bin:$PATH"
      working_container:
        user: root
        volumes:
          # To get caching effects from previous builds
          - /var/lib/containers:/var/lib/containers
    pip_install_timeout: 60
    conda_install_timeout: 60
    packages:
      jupyter_base:
        - notebook
        - ipympl
        - ipyleaflet
        - ipywidgets
        - bqplot
        - jupyter_bokeh
        - jupyter-server-proxy
        - nbgrader
    conda_environment_path: "{{ playbook_dir }}/environment.yml"
  roles:
    - { role: rasmunk-ansible/tools/python,
        requirements_path: "{{ playbook_dir }}/requirements.txt",
        python_env_name: "base",
        become_user: "{{ notebook.user }}" }

  tasks:
    - name: configure pip timeout
      blockinfile:
        path: /etc/pip.conf
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        create: yes
        block: |
          [global]
          timeout={{ pip_install_timeout }}
        mode: 0755

    - name: install required python3-apt
      apt:
        state: present
        name:
          - python3-apt
      become: yes

    - name: install notebook dependencies
      apt:
        state: present
        name:
          - automake
          - autoconf
          - gcc
          - g++
          - make
          - cmake
          - gfortran
          - perl
          - tar
          - bzip2
          - zlib1g
          - git
          - tzdata
          - lftp
          - openssh-client
          - rsync
          - curl
          - texlive
          - texlive-latex-extra
          - htop
          - nano
          - vim
          - man
          - less
          - tree
          - rclone
          - unzip
          - wget
          - screen
      become: yes

    - name: prepare conda, npm, and yarn
      command: "{{ item.cmd }}" # noqa no-changed-when
      with_items:
        - { cmd: "conda config --set read_remote_timeout_secs {{ conda_install_timeout }}" }
        - { cmd: npm config set production }
        - { cmd: conda update --quite -n base conda}
      tags:
        - stop-layering

    - name: update conda, npm, and yarn
      command: "{{ item.cmd }}" # noqa no-changed-when
      with_items:
        - { cmd: "conda update --quite -n base conda" }
        - { cmd: "npm i -g npm" }
        - { cmd: "npm i -g yarn" }
        - { cmd: "conda clean --all -f -y" }
        - { cmd: "npm cache clean --force" }
        - { cmd: "rm -fr /home/{{ notebook.user }}/.yarn" }
        - { cmd: "rm -fr /home/{{ notebook.user }}/.npm" }
        - { cmd: "rm -fr /home/{{ notebook.user }}/.node" }
        - { cmd: "rm -fr /home/{{ notebook.user }}/.npmrc" }
        - { cmd: "fix-permissions {{ conda_dir }}" }
        - { cmd: "fix-permissions /home/{{ notebook.user }}" }
      tags:
        - stop-layering

    - name: copy conda environment file
      copy:
        src: "{{ conda_environment_path }}"
        dest: "/tmp/environment.yml"
        owner: "{{ notebook.user }}"
        group: "{{ notebook.user }}"
        mode: 0755
      tags:
        - stop-layering

    - name: conda install base packages
      command: "{{ item.cmd }}" # noqa no-changed-when
      with_items:
        - { cmd: conda install -q -y -f /tmp/environment.yml }
        - { cmd: "jupyter labextension install --clean -y {{ packages.jupyter_base }}" }
      tags:
        - stop-layering

    - name: cleanup after installing base image
      command: "{{ item.cmd }}" # noqa no-changed-when
      with_items:
        - { cmd: conda clean --all -f -y }
        - { cmd: npm cache clean --force }
        - { cmd: npm dedupe }
        - { cmd: "rm -fr /home/{{ notebook.user }}/.yarn" }
        - { cmd: "rm -fr /home/{{ notebook.user }}/.npm" }
        - { cmd: "rm -fr /tmp/npm*" }
        - { cmd: "rm -fr /tmp/v8*" }
        - { cmd: "fix-permissions {{ conda_dir }}" }
        - { cmd: "fix-permissions /home/{{ notebook.user }}" }
      tags:
        - stop-layering

    - name: initialize conda and disable that the base environment is activated
      command: "{{ item.cmd }}" # noqa no-changed-when
      with_items:
        - { cmd: "conda init" }
        - { cmd: "conda config --set auto_activate_base false" }
      tags:
        - stop-layering

    - name: hide the default pip and pip3 so the user doesn't install into them by mistake
      command: "mv {{ item.src }} {{ item.dest }}" # noqa no-changed-when
      with_items:
        - { src: "{{ conda_dir }}/bin/pip", dest: "{{ conda_dir }}/bin/jupyterlab_pip" }
        - { src: "{{ conda_dir }}/bin/pip3", dest: "{{ conda_dir }}/bin/jupyterlab_pip3" }
      tags:
        - stop-layering
